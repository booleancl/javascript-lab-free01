/*
  Las Funciones en Javascript pueden ser tratadas como cualquier tipo de dato. Por ejemplo pueden ser parte de un arreglo.
*/

export function useCallbacksAsDataType() {

  var chainProcesses = function(callbacks) {
    var word = ''

    for (var index = 0; index < callbacks.length; index++) {
      var actualProcess = callbacks[index]
      word += actualProcess()
    }

    return word
  }
  var processes = [
    function(){
      return 'Callbacks';
    },
    function(){
      return 'are'
    },
    function(){
      return 'powerful'
    }
  ]
  return chainProcesses(processes)
}

/*
    游뚿游뚿  ALERTA 游뚿游뚿

    Los Callbacks son uno de los conceptos m치s importantes de Javascript. Una vez que los entiendes, puedes aprovechar el m치ximo el potencial de este lenguaje.

    Revisa la siguiente informaci칩n:
    https://javascript.boolean.cl/main/docs/01-fundamentos/05-funciones.html#caso-de-estudio-callbacks
*/

// forEach ... sirve para iterar un array pero no hacer modificaciones en 칠l
export function forEach(array, callback) {
  
  for(var index = 0; index < array.length; index++) {
    // algo falta ac치. la idea de delegar esta operaci칩n es que la funci칩n tenga disponible los argumentos necesarios para llevar a cabo su responsabilidad.
    var actualValue
    var actualIndex
    callback(actualValue, actualIndex)
  }
}